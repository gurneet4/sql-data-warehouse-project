/*
===================================================================================================================
Customer report
===================================================================================================================
Purpose:
    - This report consolidated key customer metrics and behaviours.
Highlights:
    1. Gather essential fields such as names, age, and transaction details.
    2. Segments customers into cateogires (VIP, Regular, New) and age groups.
    3. Aggregates customer level metrics:
        - total order
        - total sales
        - total quantity purchased
        - total products
        - lifespan (in months)
    4. Calculates valuable KPIs:
        - recency (months since last order)
        - average order value
        - average monthly spend
===================================================================================================================
*/
Create view gold_report_customers as 
with base_query as(
Select
f.order_number,
f.product_key,
f.order_date,
f.sales,
f.quantity,
c.customer_key,
c.customer_number,
concat(c.first_name,' ', coalesce(c.last_name,'')) as full_name,
datediff(year,c.birthdate,getdate()) age
from gold.fact_sales f
left join gold.dim_customers c
on f.customer_key = c.customer_key
where order_date is not null)
, customer_segment as(
Select 
customer_key,
customer_number,
full_name,
age,
count(distinct order_number) as total_orders,
sum(sales) as total_sales,
sum(quantity) total_quantity,
count(distinct product_key) total_products,
max(order_date) last_order,
datediff(month, min(order_date), max(order_date)) Timespan
from base_query
group by
customer_key,
customer_number,
full_name,
age)
select 
customer_key,
customer_number,
full_name,
age,
case
when age < 20 then 'Under 20'
when age between 20 and 29 then '20-29'
when age between 30 and 39 then '30-39'
when age between 40 and 49 then '40-49'
else 'Above 50'
end as age_group,
total_orders,
total_sales,
total_quantity,
total_products,
last_order,
timespan,
case
when timespan >= 12 and total_sales > 5000 then 'VIP'
when timespan >= 12 and total_sales <= 5000 then 'Regular'
else 'normal'
end as customer_type,
datediff(month, last_order, getdate()) recency,
case when total_orders = 0 then 0
 else total_sales/total_orders 
 end as avg_order_value,
case when timespan = 0 then total_sales
 else total_sales/timespan
 end as avgerage_monthly_sales
from customer_segment;
